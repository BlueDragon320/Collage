# -*- coding: utf-8 -*-
"""PP Class 7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tWjdeVcSNBj31ejbNemaH0QzGQmYjjGL
"""

class MyClass:
  def display(self):
      print("This is a message inside the class.")
object = MyClass()
object.display()

# CIE - 01
class UG_BCA:
  def display(self):
      print("We are studying in BCA 2nd Semester")
student = UG_BCA()
student.display()

class Greeting:
  # Method to print a welcome message
  def say_hello(self):
    print("Hello! Welcome to Python Programming.")
# Create on object of the class
greet = Greeting()
# Call the method using the object
greet.say_hello()

class Calculator:
  def square(self, side):
    print("Square of", side, "is", side * side)
calc = Calculator()
calc.square(5)

# CIE - 02
class cube_computation:
  def cube_display(self, number):
    cube = number ** 3
    print(f"The cube {number} is {cube}")
objectcube = cube_computation()
objectcube.cube_display(5)

class Student:
    # Class attribute
    school = 'ABC University'

    # Constructor method to initialize object attributes
    def __init__(self, name, age):  # __init__ method is correctly defined
        self.name = name
        self.age = age

    # Method to display student details
    def display_details(self):
        print(f"Name: {self.name}")
        print(f"Age: {self.age}")
        print(f"School: {self.school}")

# Creating an object (instance) of the class Student
student1 = Student("Rahul", 20)  # Correct class name used

# Calling the method using the object
student1.display_details()

# CIE - 03
class Employee:
    def __init__(self, emp_name, emp_id, emp_age, emp_salary, emp_city):
        self.emp_name = emp_name
        self.emp_id = emp_id
        self.emp_age = emp_age
        self.emp_salary = emp_salary
        self.emp_city = emp_city

    def emp_display(self):
        print(f"Employee Details:")
        print(f"Name: {self.emp_name}")
        print(f"ID: {self.emp_id}")
        print(f"Age: {self.emp_age}")
        print(f"Salary: {self.emp_salary}")
        print(f"City: {self.emp_city}")
emp = Employee("MRBean", 101, 30, 50000, "Banglore")
emp.emp_display()

class Employee:
    # Method to display employee details with parameters
    def display_info(self, name, age, empid):
        print("Employee Details:")
        print("Name:", name)242
        print("Age:", age)
        print("Emp ID:", empid)
# Create an object of the class
emp = Employee()
# Call the method with actual values
emp.display_info("Anjali", 28, "Emp1023")

class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width

# Create an object of the Rectangle class
rect = Rectangle(10, 5)

# Call the area method and print the result
print("Area of rectangle:", rect.area())

# CIE - 04
class Circle:
    def __init__(self, radius):
        self.radius = radius

    def compute_area(self):
        area = 3.14159 * (self.radius ** 2)
        return area
    def compute_circumference(self):
        circumference = 2 * 3.14159 * self.radius
        return circumference
circle = Circle(5)
print(f"The area of the circle is: {circle.compute_area():.2f}")
print(f"The circumference of the circle is: {circle.compute_circumference():.2f}")